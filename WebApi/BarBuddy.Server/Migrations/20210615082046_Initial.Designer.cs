// <auto-generated />
using System;
using BarBuddy.Server.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace BarBuddy.Server.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20210615082046_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarBuddy.Server.Entities.Augenarzt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("QRCodeSalt")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Augenarztlist");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Bar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GooglePlusCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("QRCodeSalt")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.BarSpot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaType")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxPersons")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpotType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("BarSpots");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.GlaukomImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AnAugenarztGeschickt")
                        .HasColumnType("datetime2");

                    b.Property<long>("AugenarztId")
                        .HasColumnType("bigint");

                    b.Property<string>("BewertungVomAugenarzt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ByteContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ByteContentThumb128")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileExtension")
                        .HasColumnType("int");

                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kundennummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<long?>("OptikerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("VomApothekerGelesenAm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VomAugenarztBefundet")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OptikerId");

                    b.ToTable("FundusImages");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Optiker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GooglePlusCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("QRCodeSalt")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Optikerlist");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.RegistrationToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegistrationTokens");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Reservation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountPerson")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LocationSpotId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservedUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationSpotId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Augenarzt", b =>
                {
                    b.OwnsOne("BarBuddy.Server.Entities.Adress", "Adress", b1 =>
                        {
                            b1.Property<long>("AugenarztId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AddressAddition")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_AdressAddition");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_City");

                            b1.Property<string>("CompanyName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Country");

                            b1.Property<Point>("GeoLocation")
                                .HasColumnType("geography");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Postal");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Street");

                            b1.HasKey("AugenarztId");

                            b1.ToTable("Augenarztlist");

                            b1.WithOwner()
                                .HasForeignKey("AugenarztId");
                        });

                    b.OwnsOne("BarBuddy.Server.Entities.Contact", "Owner", b1 =>
                        {
                            b1.Property<long>("AugenarztId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Owner_FirstName");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Owner_LastName");

                            b1.HasKey("AugenarztId");

                            b1.ToTable("Augenarztlist");

                            b1.WithOwner()
                                .HasForeignKey("AugenarztId");
                        });

                    b.OwnsOne("BarBuddy.Server.Entities.Credentials", "Credentials", b1 =>
                        {
                            b1.Property<long>("AugenarztId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Login")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("Credentials_Login");

                            b1.Property<string>("PasswordHash")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Credentials_PasswordHash");

                            b1.HasKey("AugenarztId");

                            b1.ToTable("Augenarztlist");

                            b1.WithOwner()
                                .HasForeignKey("AugenarztId");
                        });

                    b.Navigation("Adress");

                    b.Navigation("Credentials");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Bar", b =>
                {
                    b.OwnsOne("BarBuddy.Server.Entities.Adress", "Adress", b1 =>
                        {
                            b1.Property<long>("BarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AddressAddition")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_AdressAddition");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_City");

                            b1.Property<string>("CompanyName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Country");

                            b1.Property<Point>("GeoLocation")
                                .HasColumnType("geography");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Postal");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Street");

                            b1.HasKey("BarId");

                            b1.ToTable("Bars");

                            b1.WithOwner()
                                .HasForeignKey("BarId");
                        });

                    b.OwnsOne("BarBuddy.Server.Entities.Contact", "Owner", b1 =>
                        {
                            b1.Property<long>("BarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Owner_FirstName");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Owner_LastName");

                            b1.HasKey("BarId");

                            b1.ToTable("Bars");

                            b1.WithOwner()
                                .HasForeignKey("BarId");
                        });

                    b.OwnsOne("BarBuddy.Server.Entities.Credentials", "Credentials", b1 =>
                        {
                            b1.Property<long>("BarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Login")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("Credentials_Login");

                            b1.Property<string>("PasswordHash")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Credentials_PasswordHash");

                            b1.HasKey("BarId");

                            b1.ToTable("Bars");

                            b1.WithOwner()
                                .HasForeignKey("BarId");
                        });

                    b.Navigation("Adress");

                    b.Navigation("Credentials");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.BarSpot", b =>
                {
                    b.HasOne("BarBuddy.Server.Entities.Bar", "Location")
                        .WithMany("LocationSpots")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.GlaukomImage", b =>
                {
                    b.HasOne("BarBuddy.Server.Entities.Optiker", "Optiker")
                        .WithMany("FundusImages")
                        .HasForeignKey("OptikerId");

                    b.Navigation("Optiker");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Optiker", b =>
                {
                    b.OwnsOne("BarBuddy.Server.Entities.Adress", "Adress", b1 =>
                        {
                            b1.Property<long>("OptikerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AddressAddition")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_AdressAddition");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_City");

                            b1.Property<string>("CompanyName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Country");

                            b1.Property<Point>("GeoLocation")
                                .HasColumnType("geography");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Postal");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adress_Street");

                            b1.HasKey("OptikerId");

                            b1.ToTable("Optikerlist");

                            b1.WithOwner()
                                .HasForeignKey("OptikerId");
                        });

                    b.OwnsOne("BarBuddy.Server.Entities.Contact", "Owner", b1 =>
                        {
                            b1.Property<long>("OptikerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Owner_FirstName");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Owner_LastName");

                            b1.HasKey("OptikerId");

                            b1.ToTable("Optikerlist");

                            b1.WithOwner()
                                .HasForeignKey("OptikerId");
                        });

                    b.OwnsOne("BarBuddy.Server.Entities.Credentials", "Credentials", b1 =>
                        {
                            b1.Property<long>("OptikerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Login")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("Credentials_Login");

                            b1.Property<string>("PasswordHash")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Credentials_PasswordHash");

                            b1.HasKey("OptikerId");

                            b1.ToTable("Optikerlist");

                            b1.WithOwner()
                                .HasForeignKey("OptikerId");
                        });

                    b.Navigation("Adress");

                    b.Navigation("Credentials");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Reservation", b =>
                {
                    b.HasOne("BarBuddy.Server.Entities.BarSpot", "LocationSpot")
                        .WithMany("Reservations")
                        .HasForeignKey("LocationSpotId");

                    b.Navigation("LocationSpot");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Bar", b =>
                {
                    b.Navigation("LocationSpots");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.BarSpot", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BarBuddy.Server.Entities.Optiker", b =>
                {
                    b.Navigation("FundusImages");
                });
#pragma warning restore 612, 618
        }
    }
}
